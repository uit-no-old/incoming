---
# IP incoming should listen on
IncomingIP: 0.0.0.0

# port incoming should listen on
IncomingPort: 4000

# a file is split into many chunks which are uploaded in sequence...
UploadChunkSizeKB: 512

# how many send()s may the browser be ahead of receiving acks? If this is i,
# sender will send message (n+i) only after ack for message (n) has been
# received. So this should be greater or equal than 1.
# If it is 1, the upload will certainly proceed slower than it could, because
# each chunk is first acknowledged from the server before the next one is sent.
UploadSendAhead: 4

# how long can an upload be idle before it is automatically cancelled.
# This must be longer than either HandoverTimeoutS and HandoverConfirmTimeoutS.
UploadMaxIdleDurationS: 43200 # 12 hours

# how long may reads and writes to the websocket take before they are timed out?
# this must be smaller than the reconnect attempt interval in the javascript
# library in ws.onclose (which is as of now set to 20 seconds)
WebsocketConnectionTimeoutS: 10

# for uploads to files: where should files be stored until the web app moves /
# deletes them?
# Relative paths are evaluated relative to current working directory
StorageDir: '/var/incoming_uploads'

# how long may the 'upload is finished' request to the app backend take before
# the upload is assumed cancelled and the file deleted.
# This must be shorter than UploadMaxIdleDurationS.
HandoverTimeoutS: 30

# how long after Incoming!! signals a complete upload to app backend should Incoming!!
# assume the upload cancelled and delete the file? (only if upload is configured to
# wait for confirmation from app backend that file has been retrieved)
# This must be shorter than UploadMaxIdleDurationS.
HandoverConfirmTimeoutS: 600
